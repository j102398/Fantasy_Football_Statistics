
import requests
from bs4 import BeautifulSoup
import sqlite3

pageToScrape = requests.get('https://fbref.com/en/comps/9/Premier-League-Stats')
soup = BeautifulSoup(pageToScrape.text, "html.parser")

connection = sqlite3.connect('player_stats.db')
cursor = connection.cursor()

identifiers_and_types = [
    ('ranker', 'INTEGER'),
    ('nationality', 'TEXT'),
    ('position', 'TEXT'),
    ('team', 'TEXT'),
    ('age', 'TEXT'),
    ('birth_year', 'INTEGER'),
    ('games', 'INTEGER'),
    ('games_starts', 'INTEGER'),
    ('minutes', 'INTEGER'),
    ('minutes_90s', 'REAL'),
    ('goals', 'INTEGER'),
    ('assists', 'INTEGER'),
    ('goals_assists', 'INTEGER'),
    ('goals_pens', 'INTEGER'),
    ('pens_made', 'INTEGER'),
    ('pens_att', 'INTEGER'),
    ('cards_yellow', 'INTEGER'),
    ('cards_red', 'INTEGER'),
    ('xg', 'REAL'),
    ('npxg', 'REAL'),
    ('xg_assist', 'REAL'),
    ('npxg_xg_assist', 'REAL'),
    ('progressive_carries', 'INTEGER'),
    ('progressive_passes', 'INTEGER'),
    ('progressive_passes_received', 'INTEGER'),
    ('goals_per90', 'REAL'),
    ('assists_per90', 'REAL'),
    ('goals_assists_per90', 'REAL'),
    ('goals_pens_per90', 'REAL'),
    ('goals_assists_pens_per90', 'REAL'),
    ('xg_per90', 'REAL'),
    ('xg_assist_per90', 'REAL'),
    ('xg_xg_assist_per90', 'REAL'),
    ('npxg_per90', 'REAL'),
    ('npxg_xg_assist_per90', 'REAL')
]


tables_to_be_created = [
    'Arsenal',
    'Aston Villa',
    'Bournemouth',
    'Brentford',
    'Brighton',
    'Burnley',
    'Chelsea',
    'Crystal Palace',
    'Everton',
    'Fulham',
    'Liverpool',
    'Luton Town',
    'Manchester City',
    'Manchester Utd',
    'Newcastle Utd',
    'Nott\'ham Forest',
    'Sheffield Utd',
    'Tottenham',
    'West Ham',
    'Wolves'
]


def create_tables_and_columns():

    for team in tables_to_be_created:
        cursor.execute(f'CREATE TABLE IF NOT EXISTS "{team}" (player TEXT PRIMARY KEY)')
        for stat,data_type in identifiers_and_types:
            cursor.execute(f'ALTER TABLE "{team}" ADD COLUMN {stat} {data_type}')
    connection.commit()



create_tables_and_columns()
